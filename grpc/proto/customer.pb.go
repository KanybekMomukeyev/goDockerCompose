// Code generated by protoc-gen-go.
// source: customer.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	customer.proto

It has these top-level messages:
	ExampleRequest
	ExampleResponse
	ExampleFilter
	StaffRequest
	StaffFilter
	RoleRequest
	ProductRequest
	ProductFilter
	CategoryRequest
	CategoryFilter
	CustomerRequest
	CustomerFilter
	SupplierRequest
	SupplierFilter
	AccountRequest
	AccountFilter
	OrderRequest
	OrderFilter
	PaymentRequest
	PaymentFilter
	OrderDetailRequest
	OrderDetailFilter
	TransactionRequest
	TransactionFilter
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

// Request message for creating a new customer
type ExampleRequest struct {
	Id        uint64                    `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name      string                    `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Email     string                    `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	Phone     string                    `protobuf:"bytes,4,opt,name=phone" json:"phone,omitempty"`
	Addresses []*ExampleRequest_Address `protobuf:"bytes,5,rep,name=addresses" json:"addresses,omitempty"`
}

func (m *ExampleRequest) Reset()                    { *m = ExampleRequest{} }
func (m *ExampleRequest) String() string            { return proto1.CompactTextString(m) }
func (*ExampleRequest) ProtoMessage()               {}
func (*ExampleRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ExampleRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ExampleRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ExampleRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *ExampleRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *ExampleRequest) GetAddresses() []*ExampleRequest_Address {
	if m != nil {
		return m.Addresses
	}
	return nil
}

type ExampleRequest_Address struct {
	Street            string `protobuf:"bytes,1,opt,name=street" json:"street,omitempty"`
	City              string `protobuf:"bytes,2,opt,name=city" json:"city,omitempty"`
	State             string `protobuf:"bytes,3,opt,name=state" json:"state,omitempty"`
	Zip               string `protobuf:"bytes,4,opt,name=zip" json:"zip,omitempty"`
	IsShippingAddress bool   `protobuf:"varint,5,opt,name=isShippingAddress" json:"isShippingAddress,omitempty"`
}

func (m *ExampleRequest_Address) Reset()                    { *m = ExampleRequest_Address{} }
func (m *ExampleRequest_Address) String() string            { return proto1.CompactTextString(m) }
func (*ExampleRequest_Address) ProtoMessage()               {}
func (*ExampleRequest_Address) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *ExampleRequest_Address) GetStreet() string {
	if m != nil {
		return m.Street
	}
	return ""
}

func (m *ExampleRequest_Address) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *ExampleRequest_Address) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *ExampleRequest_Address) GetZip() string {
	if m != nil {
		return m.Zip
	}
	return ""
}

func (m *ExampleRequest_Address) GetIsShippingAddress() bool {
	if m != nil {
		return m.IsShippingAddress
	}
	return false
}

type ExampleResponse struct {
	Id      uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Success bool   `protobuf:"varint,2,opt,name=success" json:"success,omitempty"`
}

func (m *ExampleResponse) Reset()                    { *m = ExampleResponse{} }
func (m *ExampleResponse) String() string            { return proto1.CompactTextString(m) }
func (*ExampleResponse) ProtoMessage()               {}
func (*ExampleResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ExampleResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ExampleResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type ExampleFilter struct {
	Keyword string `protobuf:"bytes,1,opt,name=keyword" json:"keyword,omitempty"`
}

func (m *ExampleFilter) Reset()                    { *m = ExampleFilter{} }
func (m *ExampleFilter) String() string            { return proto1.CompactTextString(m) }
func (*ExampleFilter) ProtoMessage()               {}
func (*ExampleFilter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ExampleFilter) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

// static objects
type StaffRequest struct {
	StaffId        uint64 `protobuf:"varint,1,opt,name=staffId" json:"staffId,omitempty"`
	RoleId         uint64 `protobuf:"varint,2,opt,name=roleId" json:"roleId,omitempty"`
	StaffImagePath string `protobuf:"bytes,3,opt,name=staffImagePath" json:"staffImagePath,omitempty"`
	FirstName      string `protobuf:"bytes,4,opt,name=firstName" json:"firstName,omitempty"`
	SecondName     string `protobuf:"bytes,5,opt,name=secondName" json:"secondName,omitempty"`
	Email          string `protobuf:"bytes,6,opt,name=email" json:"email,omitempty"`
	Password       string `protobuf:"bytes,7,opt,name=password" json:"password,omitempty"`
	PhoneNumber    string `protobuf:"bytes,8,opt,name=phoneNumber" json:"phoneNumber,omitempty"`
	Address        string `protobuf:"bytes,9,opt,name=address" json:"address,omitempty"`
}

func (m *StaffRequest) Reset()                    { *m = StaffRequest{} }
func (m *StaffRequest) String() string            { return proto1.CompactTextString(m) }
func (*StaffRequest) ProtoMessage()               {}
func (*StaffRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *StaffRequest) GetStaffId() uint64 {
	if m != nil {
		return m.StaffId
	}
	return 0
}

func (m *StaffRequest) GetRoleId() uint64 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

func (m *StaffRequest) GetStaffImagePath() string {
	if m != nil {
		return m.StaffImagePath
	}
	return ""
}

func (m *StaffRequest) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *StaffRequest) GetSecondName() string {
	if m != nil {
		return m.SecondName
	}
	return ""
}

func (m *StaffRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *StaffRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *StaffRequest) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *StaffRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type StaffFilter struct {
	StaffKeyword string `protobuf:"bytes,1,opt,name=staffKeyword" json:"staffKeyword,omitempty"`
}

func (m *StaffFilter) Reset()                    { *m = StaffFilter{} }
func (m *StaffFilter) String() string            { return proto1.CompactTextString(m) }
func (*StaffFilter) ProtoMessage()               {}
func (*StaffFilter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *StaffFilter) GetStaffKeyword() string {
	if m != nil {
		return m.StaffKeyword
	}
	return ""
}

type RoleRequest struct {
	RoleId   uint64 `protobuf:"varint,1,opt,name=roleId" json:"roleId,omitempty"`
	RoleName string `protobuf:"bytes,2,opt,name=roleName" json:"roleName,omitempty"`
}

func (m *RoleRequest) Reset()                    { *m = RoleRequest{} }
func (m *RoleRequest) String() string            { return proto1.CompactTextString(m) }
func (*RoleRequest) ProtoMessage()               {}
func (*RoleRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *RoleRequest) GetRoleId() uint64 {
	if m != nil {
		return m.RoleId
	}
	return 0
}

func (m *RoleRequest) GetRoleName() string {
	if m != nil {
		return m.RoleName
	}
	return ""
}

type ProductRequest struct {
	ProductId        uint64  `protobuf:"varint,1,opt,name=productId" json:"productId,omitempty"`
	ProductImagePath string  `protobuf:"bytes,2,opt,name=productImagePath" json:"productImagePath,omitempty"`
	ProductName      string  `protobuf:"bytes,3,opt,name=productName" json:"productName,omitempty"`
	SupplierId       uint64  `protobuf:"varint,4,opt,name=supplierId" json:"supplierId,omitempty"`
	CategoryId       uint64  `protobuf:"varint,5,opt,name=categoryId" json:"categoryId,omitempty"`
	Barcode          string  `protobuf:"bytes,6,opt,name=barcode" json:"barcode,omitempty"`
	QuantityPerUnit  string  `protobuf:"bytes,7,opt,name=quantityPerUnit" json:"quantityPerUnit,omitempty"`
	SaleUnitPrice    float64 `protobuf:"fixed64,8,opt,name=saleUnitPrice" json:"saleUnitPrice,omitempty"`
	IncomeUnitPrice  float64 `protobuf:"fixed64,9,opt,name=incomeUnitPrice" json:"incomeUnitPrice,omitempty"`
	UnitsInStock     float64 `protobuf:"fixed64,10,opt,name=unitsInStock" json:"unitsInStock,omitempty"`
}

func (m *ProductRequest) Reset()                    { *m = ProductRequest{} }
func (m *ProductRequest) String() string            { return proto1.CompactTextString(m) }
func (*ProductRequest) ProtoMessage()               {}
func (*ProductRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ProductRequest) GetProductId() uint64 {
	if m != nil {
		return m.ProductId
	}
	return 0
}

func (m *ProductRequest) GetProductImagePath() string {
	if m != nil {
		return m.ProductImagePath
	}
	return ""
}

func (m *ProductRequest) GetProductName() string {
	if m != nil {
		return m.ProductName
	}
	return ""
}

func (m *ProductRequest) GetSupplierId() uint64 {
	if m != nil {
		return m.SupplierId
	}
	return 0
}

func (m *ProductRequest) GetCategoryId() uint64 {
	if m != nil {
		return m.CategoryId
	}
	return 0
}

func (m *ProductRequest) GetBarcode() string {
	if m != nil {
		return m.Barcode
	}
	return ""
}

func (m *ProductRequest) GetQuantityPerUnit() string {
	if m != nil {
		return m.QuantityPerUnit
	}
	return ""
}

func (m *ProductRequest) GetSaleUnitPrice() float64 {
	if m != nil {
		return m.SaleUnitPrice
	}
	return 0
}

func (m *ProductRequest) GetIncomeUnitPrice() float64 {
	if m != nil {
		return m.IncomeUnitPrice
	}
	return 0
}

func (m *ProductRequest) GetUnitsInStock() float64 {
	if m != nil {
		return m.UnitsInStock
	}
	return 0
}

type ProductFilter struct {
	ProductKeyword string `protobuf:"bytes,1,opt,name=productKeyword" json:"productKeyword,omitempty"`
}

func (m *ProductFilter) Reset()                    { *m = ProductFilter{} }
func (m *ProductFilter) String() string            { return proto1.CompactTextString(m) }
func (*ProductFilter) ProtoMessage()               {}
func (*ProductFilter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ProductFilter) GetProductKeyword() string {
	if m != nil {
		return m.ProductKeyword
	}
	return ""
}

type CategoryRequest struct {
	CategoryId   uint64 `protobuf:"varint,1,opt,name=categoryId" json:"categoryId,omitempty"`
	CategoryName string `protobuf:"bytes,2,opt,name=categoryName" json:"categoryName,omitempty"`
}

func (m *CategoryRequest) Reset()                    { *m = CategoryRequest{} }
func (m *CategoryRequest) String() string            { return proto1.CompactTextString(m) }
func (*CategoryRequest) ProtoMessage()               {}
func (*CategoryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *CategoryRequest) GetCategoryId() uint64 {
	if m != nil {
		return m.CategoryId
	}
	return 0
}

func (m *CategoryRequest) GetCategoryName() string {
	if m != nil {
		return m.CategoryName
	}
	return ""
}

type CategoryFilter struct {
	CategoryKeyword string `protobuf:"bytes,1,opt,name=categoryKeyword" json:"categoryKeyword,omitempty"`
}

func (m *CategoryFilter) Reset()                    { *m = CategoryFilter{} }
func (m *CategoryFilter) String() string            { return proto1.CompactTextString(m) }
func (*CategoryFilter) ProtoMessage()               {}
func (*CategoryFilter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *CategoryFilter) GetCategoryKeyword() string {
	if m != nil {
		return m.CategoryKeyword
	}
	return ""
}

type CustomerRequest struct {
	CustomerId        uint64 `protobuf:"varint,1,opt,name=customerId" json:"customerId,omitempty"`
	CustomerImagePath string `protobuf:"bytes,2,opt,name=customerImagePath" json:"customerImagePath,omitempty"`
	FirstName         string `protobuf:"bytes,3,opt,name=firstName" json:"firstName,omitempty"`
	SecondName        string `protobuf:"bytes,4,opt,name=secondName" json:"secondName,omitempty"`
	PhoneNumber       string `protobuf:"bytes,5,opt,name=phoneNumber" json:"phoneNumber,omitempty"`
	Address           string `protobuf:"bytes,6,opt,name=address" json:"address,omitempty"`
}

func (m *CustomerRequest) Reset()                    { *m = CustomerRequest{} }
func (m *CustomerRequest) String() string            { return proto1.CompactTextString(m) }
func (*CustomerRequest) ProtoMessage()               {}
func (*CustomerRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *CustomerRequest) GetCustomerId() uint64 {
	if m != nil {
		return m.CustomerId
	}
	return 0
}

func (m *CustomerRequest) GetCustomerImagePath() string {
	if m != nil {
		return m.CustomerImagePath
	}
	return ""
}

func (m *CustomerRequest) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *CustomerRequest) GetSecondName() string {
	if m != nil {
		return m.SecondName
	}
	return ""
}

func (m *CustomerRequest) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *CustomerRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type CustomerFilter struct {
	CustomerKeyword string `protobuf:"bytes,1,opt,name=customerKeyword" json:"customerKeyword,omitempty"`
}

func (m *CustomerFilter) Reset()                    { *m = CustomerFilter{} }
func (m *CustomerFilter) String() string            { return proto1.CompactTextString(m) }
func (*CustomerFilter) ProtoMessage()               {}
func (*CustomerFilter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *CustomerFilter) GetCustomerKeyword() string {
	if m != nil {
		return m.CustomerKeyword
	}
	return ""
}

type SupplierRequest struct {
	SupplierId        uint64 `protobuf:"varint,1,opt,name=supplierId" json:"supplierId,omitempty"`
	SupplierImagePath string `protobuf:"bytes,2,opt,name=supplierImagePath" json:"supplierImagePath,omitempty"`
	CompanyName       string `protobuf:"bytes,3,opt,name=companyName" json:"companyName,omitempty"`
	ContactFname      string `protobuf:"bytes,4,opt,name=contactFname" json:"contactFname,omitempty"`
	PhoneNumber       string `protobuf:"bytes,5,opt,name=phoneNumber" json:"phoneNumber,omitempty"`
	Address           string `protobuf:"bytes,6,opt,name=address" json:"address,omitempty"`
}

func (m *SupplierRequest) Reset()                    { *m = SupplierRequest{} }
func (m *SupplierRequest) String() string            { return proto1.CompactTextString(m) }
func (*SupplierRequest) ProtoMessage()               {}
func (*SupplierRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *SupplierRequest) GetSupplierId() uint64 {
	if m != nil {
		return m.SupplierId
	}
	return 0
}

func (m *SupplierRequest) GetSupplierImagePath() string {
	if m != nil {
		return m.SupplierImagePath
	}
	return ""
}

func (m *SupplierRequest) GetCompanyName() string {
	if m != nil {
		return m.CompanyName
	}
	return ""
}

func (m *SupplierRequest) GetContactFname() string {
	if m != nil {
		return m.ContactFname
	}
	return ""
}

func (m *SupplierRequest) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *SupplierRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type SupplierFilter struct {
	SupplierKeyword string `protobuf:"bytes,1,opt,name=supplierKeyword" json:"supplierKeyword,omitempty"`
}

func (m *SupplierFilter) Reset()                    { *m = SupplierFilter{} }
func (m *SupplierFilter) String() string            { return proto1.CompactTextString(m) }
func (*SupplierFilter) ProtoMessage()               {}
func (*SupplierFilter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *SupplierFilter) GetSupplierKeyword() string {
	if m != nil {
		return m.SupplierKeyword
	}
	return ""
}

type AccountRequest struct {
	AccountId  uint64  `protobuf:"varint,1,opt,name=accountId" json:"accountId,omitempty"`
	CustomerId uint64  `protobuf:"varint,2,opt,name=customerId" json:"customerId,omitempty"`
	SupplierId uint64  `protobuf:"varint,3,opt,name=supplierId" json:"supplierId,omitempty"`
	Balance    float64 `protobuf:"fixed64,4,opt,name=balance" json:"balance,omitempty"`
}

func (m *AccountRequest) Reset()                    { *m = AccountRequest{} }
func (m *AccountRequest) String() string            { return proto1.CompactTextString(m) }
func (*AccountRequest) ProtoMessage()               {}
func (*AccountRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *AccountRequest) GetAccountId() uint64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *AccountRequest) GetCustomerId() uint64 {
	if m != nil {
		return m.CustomerId
	}
	return 0
}

func (m *AccountRequest) GetSupplierId() uint64 {
	if m != nil {
		return m.SupplierId
	}
	return 0
}

func (m *AccountRequest) GetBalance() float64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

type AccountFilter struct {
	AccountKeyword string `protobuf:"bytes,1,opt,name=accountKeyword" json:"accountKeyword,omitempty"`
}

func (m *AccountFilter) Reset()                    { *m = AccountFilter{} }
func (m *AccountFilter) String() string            { return proto1.CompactTextString(m) }
func (*AccountFilter) ProtoMessage()               {}
func (*AccountFilter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *AccountFilter) GetAccountKeyword() string {
	if m != nil {
		return m.AccountKeyword
	}
	return ""
}

// static objects
type OrderRequest struct {
	OrderId           uint64 `protobuf:"varint,1,opt,name=orderId" json:"orderId,omitempty"`
	OrderDocument     uint32 `protobuf:"varint,2,opt,name=orderDocument" json:"orderDocument,omitempty"`
	MoneyMovementType uint32 `protobuf:"varint,3,opt,name=moneyMovementType" json:"moneyMovementType,omitempty"`
	BillingNo         string `protobuf:"bytes,4,opt,name=billingNo" json:"billingNo,omitempty"`
	StaffId           uint64 `protobuf:"varint,5,opt,name=staffId" json:"staffId,omitempty"`
	CustomerId        uint64 `protobuf:"varint,6,opt,name=customerId" json:"customerId,omitempty"`
	SupplierId        uint64 `protobuf:"varint,7,opt,name=supplierId" json:"supplierId,omitempty"`
	OrderDate         uint64 `protobuf:"varint,8,opt,name=orderDate" json:"orderDate,omitempty"`
	PaymentId         uint64 `protobuf:"varint,9,opt,name=paymentId" json:"paymentId,omitempty"`
	ErrorMsg          string `protobuf:"bytes,10,opt,name=errorMsg" json:"errorMsg,omitempty"`
	Comment           string `protobuf:"bytes,11,opt,name=comment" json:"comment,omitempty"`
	IsDeleted         uint32 `protobuf:"varint,12,opt,name=isDeleted" json:"isDeleted,omitempty"`
	IsPaid            uint32 `protobuf:"varint,13,opt,name=isPaid" json:"isPaid,omitempty"`
	IsEdited          uint32 `protobuf:"varint,14,opt,name=isEdited" json:"isEdited,omitempty"`
}

func (m *OrderRequest) Reset()                    { *m = OrderRequest{} }
func (m *OrderRequest) String() string            { return proto1.CompactTextString(m) }
func (*OrderRequest) ProtoMessage()               {}
func (*OrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *OrderRequest) GetOrderId() uint64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

func (m *OrderRequest) GetOrderDocument() uint32 {
	if m != nil {
		return m.OrderDocument
	}
	return 0
}

func (m *OrderRequest) GetMoneyMovementType() uint32 {
	if m != nil {
		return m.MoneyMovementType
	}
	return 0
}

func (m *OrderRequest) GetBillingNo() string {
	if m != nil {
		return m.BillingNo
	}
	return ""
}

func (m *OrderRequest) GetStaffId() uint64 {
	if m != nil {
		return m.StaffId
	}
	return 0
}

func (m *OrderRequest) GetCustomerId() uint64 {
	if m != nil {
		return m.CustomerId
	}
	return 0
}

func (m *OrderRequest) GetSupplierId() uint64 {
	if m != nil {
		return m.SupplierId
	}
	return 0
}

func (m *OrderRequest) GetOrderDate() uint64 {
	if m != nil {
		return m.OrderDate
	}
	return 0
}

func (m *OrderRequest) GetPaymentId() uint64 {
	if m != nil {
		return m.PaymentId
	}
	return 0
}

func (m *OrderRequest) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

func (m *OrderRequest) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *OrderRequest) GetIsDeleted() uint32 {
	if m != nil {
		return m.IsDeleted
	}
	return 0
}

func (m *OrderRequest) GetIsPaid() uint32 {
	if m != nil {
		return m.IsPaid
	}
	return 0
}

func (m *OrderRequest) GetIsEdited() uint32 {
	if m != nil {
		return m.IsEdited
	}
	return 0
}

type OrderFilter struct {
	OrderKeyword string `protobuf:"bytes,1,opt,name=orderKeyword" json:"orderKeyword,omitempty"`
}

func (m *OrderFilter) Reset()                    { *m = OrderFilter{} }
func (m *OrderFilter) String() string            { return proto1.CompactTextString(m) }
func (*OrderFilter) ProtoMessage()               {}
func (*OrderFilter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *OrderFilter) GetOrderKeyword() string {
	if m != nil {
		return m.OrderKeyword
	}
	return ""
}

type PaymentRequest struct {
	PaymentId              uint64  `protobuf:"varint,1,opt,name=paymentId" json:"paymentId,omitempty"`
	TotalOrderPrice        float64 `protobuf:"fixed64,2,opt,name=totalOrderPrice" json:"totalOrderPrice,omitempty"`
	Discount               float64 `protobuf:"fixed64,3,opt,name=discount" json:"discount,omitempty"`
	TotalPriceWithDiscount float64 `protobuf:"fixed64,4,opt,name=totalPriceWithDiscount" json:"totalPriceWithDiscount,omitempty"`
}

func (m *PaymentRequest) Reset()                    { *m = PaymentRequest{} }
func (m *PaymentRequest) String() string            { return proto1.CompactTextString(m) }
func (*PaymentRequest) ProtoMessage()               {}
func (*PaymentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *PaymentRequest) GetPaymentId() uint64 {
	if m != nil {
		return m.PaymentId
	}
	return 0
}

func (m *PaymentRequest) GetTotalOrderPrice() float64 {
	if m != nil {
		return m.TotalOrderPrice
	}
	return 0
}

func (m *PaymentRequest) GetDiscount() float64 {
	if m != nil {
		return m.Discount
	}
	return 0
}

func (m *PaymentRequest) GetTotalPriceWithDiscount() float64 {
	if m != nil {
		return m.TotalPriceWithDiscount
	}
	return 0
}

type PaymentFilter struct {
	PaymentKeyword string `protobuf:"bytes,1,opt,name=paymentKeyword" json:"paymentKeyword,omitempty"`
}

func (m *PaymentFilter) Reset()                    { *m = PaymentFilter{} }
func (m *PaymentFilter) String() string            { return proto1.CompactTextString(m) }
func (*PaymentFilter) ProtoMessage()               {}
func (*PaymentFilter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *PaymentFilter) GetPaymentKeyword() string {
	if m != nil {
		return m.PaymentKeyword
	}
	return ""
}

type OrderDetailRequest struct {
	OrderDetailId uint64  `protobuf:"varint,1,opt,name=orderDetailId" json:"orderDetailId,omitempty"`
	OrderId       uint64  `protobuf:"varint,2,opt,name=orderId" json:"orderId,omitempty"`
	ProductId     uint64  `protobuf:"varint,3,opt,name=productId" json:"productId,omitempty"`
	BillingNo     string  `protobuf:"bytes,4,opt,name=billingNo" json:"billingNo,omitempty"`
	Price         float64 `protobuf:"fixed64,5,opt,name=price" json:"price,omitempty"`
	OrderQuantity float64 `protobuf:"fixed64,6,opt,name=orderQuantity" json:"orderQuantity,omitempty"`
	Discount      int32   `protobuf:"varint,7,opt,name=discount" json:"discount,omitempty"`
}

func (m *OrderDetailRequest) Reset()                    { *m = OrderDetailRequest{} }
func (m *OrderDetailRequest) String() string            { return proto1.CompactTextString(m) }
func (*OrderDetailRequest) ProtoMessage()               {}
func (*OrderDetailRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *OrderDetailRequest) GetOrderDetailId() uint64 {
	if m != nil {
		return m.OrderDetailId
	}
	return 0
}

func (m *OrderDetailRequest) GetOrderId() uint64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

func (m *OrderDetailRequest) GetProductId() uint64 {
	if m != nil {
		return m.ProductId
	}
	return 0
}

func (m *OrderDetailRequest) GetBillingNo() string {
	if m != nil {
		return m.BillingNo
	}
	return ""
}

func (m *OrderDetailRequest) GetPrice() float64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *OrderDetailRequest) GetOrderQuantity() float64 {
	if m != nil {
		return m.OrderQuantity
	}
	return 0
}

func (m *OrderDetailRequest) GetDiscount() int32 {
	if m != nil {
		return m.Discount
	}
	return 0
}

type OrderDetailFilter struct {
	OrderDetailKeyword string `protobuf:"bytes,1,opt,name=orderDetailKeyword" json:"orderDetailKeyword,omitempty"`
}

func (m *OrderDetailFilter) Reset()                    { *m = OrderDetailFilter{} }
func (m *OrderDetailFilter) String() string            { return proto1.CompactTextString(m) }
func (*OrderDetailFilter) ProtoMessage()               {}
func (*OrderDetailFilter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *OrderDetailFilter) GetOrderDetailKeyword() string {
	if m != nil {
		return m.OrderDetailKeyword
	}
	return ""
}

type TransactionRequest struct {
	TransactionId   uint64  `protobuf:"varint,1,opt,name=transactionId" json:"transactionId,omitempty"`
	TransactionDate uint64  `protobuf:"varint,2,opt,name=transactionDate" json:"transactionDate,omitempty"`
	TransactionType uint32  `protobuf:"varint,3,opt,name=transactionType" json:"transactionType,omitempty"`
	MoneyAmount     float64 `protobuf:"fixed64,4,opt,name=moneyAmount" json:"moneyAmount,omitempty"`
	OrderId         uint64  `protobuf:"varint,5,opt,name=orderId" json:"orderId,omitempty"`
	CustomerId      uint64  `protobuf:"varint,6,opt,name=customerId" json:"customerId,omitempty"`
	SupplierId      uint64  `protobuf:"varint,7,opt,name=supplierId" json:"supplierId,omitempty"`
	StaffId         uint64  `protobuf:"varint,8,opt,name=staffId" json:"staffId,omitempty"`
}

func (m *TransactionRequest) Reset()                    { *m = TransactionRequest{} }
func (m *TransactionRequest) String() string            { return proto1.CompactTextString(m) }
func (*TransactionRequest) ProtoMessage()               {}
func (*TransactionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *TransactionRequest) GetTransactionId() uint64 {
	if m != nil {
		return m.TransactionId
	}
	return 0
}

func (m *TransactionRequest) GetTransactionDate() uint64 {
	if m != nil {
		return m.TransactionDate
	}
	return 0
}

func (m *TransactionRequest) GetTransactionType() uint32 {
	if m != nil {
		return m.TransactionType
	}
	return 0
}

func (m *TransactionRequest) GetMoneyAmount() float64 {
	if m != nil {
		return m.MoneyAmount
	}
	return 0
}

func (m *TransactionRequest) GetOrderId() uint64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

func (m *TransactionRequest) GetCustomerId() uint64 {
	if m != nil {
		return m.CustomerId
	}
	return 0
}

func (m *TransactionRequest) GetSupplierId() uint64 {
	if m != nil {
		return m.SupplierId
	}
	return 0
}

func (m *TransactionRequest) GetStaffId() uint64 {
	if m != nil {
		return m.StaffId
	}
	return 0
}

type TransactionFilter struct {
	TransactionKeyword string `protobuf:"bytes,1,opt,name=transactionKeyword" json:"transactionKeyword,omitempty"`
}

func (m *TransactionFilter) Reset()                    { *m = TransactionFilter{} }
func (m *TransactionFilter) String() string            { return proto1.CompactTextString(m) }
func (*TransactionFilter) ProtoMessage()               {}
func (*TransactionFilter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *TransactionFilter) GetTransactionKeyword() string {
	if m != nil {
		return m.TransactionKeyword
	}
	return ""
}

func init() {
	proto1.RegisterType((*ExampleRequest)(nil), "proto.ExampleRequest")
	proto1.RegisterType((*ExampleRequest_Address)(nil), "proto.ExampleRequest.Address")
	proto1.RegisterType((*ExampleResponse)(nil), "proto.ExampleResponse")
	proto1.RegisterType((*ExampleFilter)(nil), "proto.ExampleFilter")
	proto1.RegisterType((*StaffRequest)(nil), "proto.StaffRequest")
	proto1.RegisterType((*StaffFilter)(nil), "proto.StaffFilter")
	proto1.RegisterType((*RoleRequest)(nil), "proto.RoleRequest")
	proto1.RegisterType((*ProductRequest)(nil), "proto.ProductRequest")
	proto1.RegisterType((*ProductFilter)(nil), "proto.ProductFilter")
	proto1.RegisterType((*CategoryRequest)(nil), "proto.CategoryRequest")
	proto1.RegisterType((*CategoryFilter)(nil), "proto.CategoryFilter")
	proto1.RegisterType((*CustomerRequest)(nil), "proto.CustomerRequest")
	proto1.RegisterType((*CustomerFilter)(nil), "proto.CustomerFilter")
	proto1.RegisterType((*SupplierRequest)(nil), "proto.SupplierRequest")
	proto1.RegisterType((*SupplierFilter)(nil), "proto.SupplierFilter")
	proto1.RegisterType((*AccountRequest)(nil), "proto.AccountRequest")
	proto1.RegisterType((*AccountFilter)(nil), "proto.AccountFilter")
	proto1.RegisterType((*OrderRequest)(nil), "proto.OrderRequest")
	proto1.RegisterType((*OrderFilter)(nil), "proto.OrderFilter")
	proto1.RegisterType((*PaymentRequest)(nil), "proto.PaymentRequest")
	proto1.RegisterType((*PaymentFilter)(nil), "proto.PaymentFilter")
	proto1.RegisterType((*OrderDetailRequest)(nil), "proto.OrderDetailRequest")
	proto1.RegisterType((*OrderDetailFilter)(nil), "proto.OrderDetailFilter")
	proto1.RegisterType((*TransactionRequest)(nil), "proto.TransactionRequest")
	proto1.RegisterType((*TransactionFilter)(nil), "proto.TransactionFilter")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for RentautomationService service

type RentautomationServiceClient interface {
	GetExamples(ctx context.Context, in *ExampleFilter, opts ...grpc.CallOption) (RentautomationService_GetExamplesClient, error)
	CreateExample(ctx context.Context, in *ExampleRequest, opts ...grpc.CallOption) (*ExampleResponse, error)
	CreateAccount(ctx context.Context, in *AccountRequest, opts ...grpc.CallOption) (*AccountRequest, error)
	GetAccounts(ctx context.Context, in *AccountFilter, opts ...grpc.CallOption) (RentautomationService_GetAccountsClient, error)
	CreateCategory(ctx context.Context, in *CategoryRequest, opts ...grpc.CallOption) (*CategoryRequest, error)
	GetCategories(ctx context.Context, in *CategoryFilter, opts ...grpc.CallOption) (RentautomationService_GetCategoriesClient, error)
	CreateCustomer(ctx context.Context, in *CustomerRequest, opts ...grpc.CallOption) (*CustomerRequest, error)
	GetCustomers(ctx context.Context, in *CustomerFilter, opts ...grpc.CallOption) (RentautomationService_GetCustomersClient, error)
	CreateOrder(ctx context.Context, in *OrderRequest, opts ...grpc.CallOption) (*OrderRequest, error)
	GetOrders(ctx context.Context, in *OrderFilter, opts ...grpc.CallOption) (RentautomationService_GetOrdersClient, error)
	CreateOrderDetail(ctx context.Context, in *OrderDetailRequest, opts ...grpc.CallOption) (*OrderDetailRequest, error)
	GetOrderDetails(ctx context.Context, in *OrderDetailFilter, opts ...grpc.CallOption) (RentautomationService_GetOrderDetailsClient, error)
	CreatePayment(ctx context.Context, in *PaymentRequest, opts ...grpc.CallOption) (*PaymentRequest, error)
	GetPayments(ctx context.Context, in *PaymentFilter, opts ...grpc.CallOption) (RentautomationService_GetPaymentsClient, error)
	CreateProduct(ctx context.Context, in *ProductRequest, opts ...grpc.CallOption) (*ProductRequest, error)
	GetProducts(ctx context.Context, in *ProductFilter, opts ...grpc.CallOption) (RentautomationService_GetProductsClient, error)
	CreateStaff(ctx context.Context, in *StaffRequest, opts ...grpc.CallOption) (*StaffRequest, error)
	GetStaff(ctx context.Context, in *StaffFilter, opts ...grpc.CallOption) (RentautomationService_GetStaffClient, error)
	CreateTransaction(ctx context.Context, in *TransactionRequest, opts ...grpc.CallOption) (*TransactionRequest, error)
	GetTransactions(ctx context.Context, in *TransactionFilter, opts ...grpc.CallOption) (RentautomationService_GetTransactionsClient, error)
}

type rentautomationServiceClient struct {
	cc *grpc.ClientConn
}

func NewRentautomationServiceClient(cc *grpc.ClientConn) RentautomationServiceClient {
	return &rentautomationServiceClient{cc}
}

func (c *rentautomationServiceClient) GetExamples(ctx context.Context, in *ExampleFilter, opts ...grpc.CallOption) (RentautomationService_GetExamplesClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_RentautomationService_serviceDesc.Streams[0], c.cc, "/proto.RentautomationService/GetExamples", opts...)
	if err != nil {
		return nil, err
	}
	x := &rentautomationServiceGetExamplesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RentautomationService_GetExamplesClient interface {
	Recv() (*ExampleRequest, error)
	grpc.ClientStream
}

type rentautomationServiceGetExamplesClient struct {
	grpc.ClientStream
}

func (x *rentautomationServiceGetExamplesClient) Recv() (*ExampleRequest, error) {
	m := new(ExampleRequest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *rentautomationServiceClient) CreateExample(ctx context.Context, in *ExampleRequest, opts ...grpc.CallOption) (*ExampleResponse, error) {
	out := new(ExampleResponse)
	err := grpc.Invoke(ctx, "/proto.RentautomationService/CreateExample", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rentautomationServiceClient) CreateAccount(ctx context.Context, in *AccountRequest, opts ...grpc.CallOption) (*AccountRequest, error) {
	out := new(AccountRequest)
	err := grpc.Invoke(ctx, "/proto.RentautomationService/CreateAccount", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rentautomationServiceClient) GetAccounts(ctx context.Context, in *AccountFilter, opts ...grpc.CallOption) (RentautomationService_GetAccountsClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_RentautomationService_serviceDesc.Streams[1], c.cc, "/proto.RentautomationService/GetAccounts", opts...)
	if err != nil {
		return nil, err
	}
	x := &rentautomationServiceGetAccountsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RentautomationService_GetAccountsClient interface {
	Recv() (*AccountRequest, error)
	grpc.ClientStream
}

type rentautomationServiceGetAccountsClient struct {
	grpc.ClientStream
}

func (x *rentautomationServiceGetAccountsClient) Recv() (*AccountRequest, error) {
	m := new(AccountRequest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *rentautomationServiceClient) CreateCategory(ctx context.Context, in *CategoryRequest, opts ...grpc.CallOption) (*CategoryRequest, error) {
	out := new(CategoryRequest)
	err := grpc.Invoke(ctx, "/proto.RentautomationService/CreateCategory", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rentautomationServiceClient) GetCategories(ctx context.Context, in *CategoryFilter, opts ...grpc.CallOption) (RentautomationService_GetCategoriesClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_RentautomationService_serviceDesc.Streams[2], c.cc, "/proto.RentautomationService/GetCategories", opts...)
	if err != nil {
		return nil, err
	}
	x := &rentautomationServiceGetCategoriesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RentautomationService_GetCategoriesClient interface {
	Recv() (*CategoryRequest, error)
	grpc.ClientStream
}

type rentautomationServiceGetCategoriesClient struct {
	grpc.ClientStream
}

func (x *rentautomationServiceGetCategoriesClient) Recv() (*CategoryRequest, error) {
	m := new(CategoryRequest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *rentautomationServiceClient) CreateCustomer(ctx context.Context, in *CustomerRequest, opts ...grpc.CallOption) (*CustomerRequest, error) {
	out := new(CustomerRequest)
	err := grpc.Invoke(ctx, "/proto.RentautomationService/CreateCustomer", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rentautomationServiceClient) GetCustomers(ctx context.Context, in *CustomerFilter, opts ...grpc.CallOption) (RentautomationService_GetCustomersClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_RentautomationService_serviceDesc.Streams[3], c.cc, "/proto.RentautomationService/GetCustomers", opts...)
	if err != nil {
		return nil, err
	}
	x := &rentautomationServiceGetCustomersClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RentautomationService_GetCustomersClient interface {
	Recv() (*CustomerRequest, error)
	grpc.ClientStream
}

type rentautomationServiceGetCustomersClient struct {
	grpc.ClientStream
}

func (x *rentautomationServiceGetCustomersClient) Recv() (*CustomerRequest, error) {
	m := new(CustomerRequest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *rentautomationServiceClient) CreateOrder(ctx context.Context, in *OrderRequest, opts ...grpc.CallOption) (*OrderRequest, error) {
	out := new(OrderRequest)
	err := grpc.Invoke(ctx, "/proto.RentautomationService/CreateOrder", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rentautomationServiceClient) GetOrders(ctx context.Context, in *OrderFilter, opts ...grpc.CallOption) (RentautomationService_GetOrdersClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_RentautomationService_serviceDesc.Streams[4], c.cc, "/proto.RentautomationService/GetOrders", opts...)
	if err != nil {
		return nil, err
	}
	x := &rentautomationServiceGetOrdersClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RentautomationService_GetOrdersClient interface {
	Recv() (*OrderRequest, error)
	grpc.ClientStream
}

type rentautomationServiceGetOrdersClient struct {
	grpc.ClientStream
}

func (x *rentautomationServiceGetOrdersClient) Recv() (*OrderRequest, error) {
	m := new(OrderRequest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *rentautomationServiceClient) CreateOrderDetail(ctx context.Context, in *OrderDetailRequest, opts ...grpc.CallOption) (*OrderDetailRequest, error) {
	out := new(OrderDetailRequest)
	err := grpc.Invoke(ctx, "/proto.RentautomationService/CreateOrderDetail", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rentautomationServiceClient) GetOrderDetails(ctx context.Context, in *OrderDetailFilter, opts ...grpc.CallOption) (RentautomationService_GetOrderDetailsClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_RentautomationService_serviceDesc.Streams[5], c.cc, "/proto.RentautomationService/GetOrderDetails", opts...)
	if err != nil {
		return nil, err
	}
	x := &rentautomationServiceGetOrderDetailsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RentautomationService_GetOrderDetailsClient interface {
	Recv() (*OrderDetailRequest, error)
	grpc.ClientStream
}

type rentautomationServiceGetOrderDetailsClient struct {
	grpc.ClientStream
}

func (x *rentautomationServiceGetOrderDetailsClient) Recv() (*OrderDetailRequest, error) {
	m := new(OrderDetailRequest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *rentautomationServiceClient) CreatePayment(ctx context.Context, in *PaymentRequest, opts ...grpc.CallOption) (*PaymentRequest, error) {
	out := new(PaymentRequest)
	err := grpc.Invoke(ctx, "/proto.RentautomationService/CreatePayment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rentautomationServiceClient) GetPayments(ctx context.Context, in *PaymentFilter, opts ...grpc.CallOption) (RentautomationService_GetPaymentsClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_RentautomationService_serviceDesc.Streams[6], c.cc, "/proto.RentautomationService/GetPayments", opts...)
	if err != nil {
		return nil, err
	}
	x := &rentautomationServiceGetPaymentsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RentautomationService_GetPaymentsClient interface {
	Recv() (*PaymentRequest, error)
	grpc.ClientStream
}

type rentautomationServiceGetPaymentsClient struct {
	grpc.ClientStream
}

func (x *rentautomationServiceGetPaymentsClient) Recv() (*PaymentRequest, error) {
	m := new(PaymentRequest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *rentautomationServiceClient) CreateProduct(ctx context.Context, in *ProductRequest, opts ...grpc.CallOption) (*ProductRequest, error) {
	out := new(ProductRequest)
	err := grpc.Invoke(ctx, "/proto.RentautomationService/CreateProduct", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rentautomationServiceClient) GetProducts(ctx context.Context, in *ProductFilter, opts ...grpc.CallOption) (RentautomationService_GetProductsClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_RentautomationService_serviceDesc.Streams[7], c.cc, "/proto.RentautomationService/GetProducts", opts...)
	if err != nil {
		return nil, err
	}
	x := &rentautomationServiceGetProductsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RentautomationService_GetProductsClient interface {
	Recv() (*ProductRequest, error)
	grpc.ClientStream
}

type rentautomationServiceGetProductsClient struct {
	grpc.ClientStream
}

func (x *rentautomationServiceGetProductsClient) Recv() (*ProductRequest, error) {
	m := new(ProductRequest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *rentautomationServiceClient) CreateStaff(ctx context.Context, in *StaffRequest, opts ...grpc.CallOption) (*StaffRequest, error) {
	out := new(StaffRequest)
	err := grpc.Invoke(ctx, "/proto.RentautomationService/CreateStaff", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rentautomationServiceClient) GetStaff(ctx context.Context, in *StaffFilter, opts ...grpc.CallOption) (RentautomationService_GetStaffClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_RentautomationService_serviceDesc.Streams[8], c.cc, "/proto.RentautomationService/GetStaff", opts...)
	if err != nil {
		return nil, err
	}
	x := &rentautomationServiceGetStaffClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RentautomationService_GetStaffClient interface {
	Recv() (*StaffRequest, error)
	grpc.ClientStream
}

type rentautomationServiceGetStaffClient struct {
	grpc.ClientStream
}

func (x *rentautomationServiceGetStaffClient) Recv() (*StaffRequest, error) {
	m := new(StaffRequest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *rentautomationServiceClient) CreateTransaction(ctx context.Context, in *TransactionRequest, opts ...grpc.CallOption) (*TransactionRequest, error) {
	out := new(TransactionRequest)
	err := grpc.Invoke(ctx, "/proto.RentautomationService/CreateTransaction", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rentautomationServiceClient) GetTransactions(ctx context.Context, in *TransactionFilter, opts ...grpc.CallOption) (RentautomationService_GetTransactionsClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_RentautomationService_serviceDesc.Streams[9], c.cc, "/proto.RentautomationService/GetTransactions", opts...)
	if err != nil {
		return nil, err
	}
	x := &rentautomationServiceGetTransactionsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RentautomationService_GetTransactionsClient interface {
	Recv() (*TransactionRequest, error)
	grpc.ClientStream
}

type rentautomationServiceGetTransactionsClient struct {
	grpc.ClientStream
}

func (x *rentautomationServiceGetTransactionsClient) Recv() (*TransactionRequest, error) {
	m := new(TransactionRequest)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for RentautomationService service

type RentautomationServiceServer interface {
	GetExamples(*ExampleFilter, RentautomationService_GetExamplesServer) error
	CreateExample(context.Context, *ExampleRequest) (*ExampleResponse, error)
	CreateAccount(context.Context, *AccountRequest) (*AccountRequest, error)
	GetAccounts(*AccountFilter, RentautomationService_GetAccountsServer) error
	CreateCategory(context.Context, *CategoryRequest) (*CategoryRequest, error)
	GetCategories(*CategoryFilter, RentautomationService_GetCategoriesServer) error
	CreateCustomer(context.Context, *CustomerRequest) (*CustomerRequest, error)
	GetCustomers(*CustomerFilter, RentautomationService_GetCustomersServer) error
	CreateOrder(context.Context, *OrderRequest) (*OrderRequest, error)
	GetOrders(*OrderFilter, RentautomationService_GetOrdersServer) error
	CreateOrderDetail(context.Context, *OrderDetailRequest) (*OrderDetailRequest, error)
	GetOrderDetails(*OrderDetailFilter, RentautomationService_GetOrderDetailsServer) error
	CreatePayment(context.Context, *PaymentRequest) (*PaymentRequest, error)
	GetPayments(*PaymentFilter, RentautomationService_GetPaymentsServer) error
	CreateProduct(context.Context, *ProductRequest) (*ProductRequest, error)
	GetProducts(*ProductFilter, RentautomationService_GetProductsServer) error
	CreateStaff(context.Context, *StaffRequest) (*StaffRequest, error)
	GetStaff(*StaffFilter, RentautomationService_GetStaffServer) error
	CreateTransaction(context.Context, *TransactionRequest) (*TransactionRequest, error)
	GetTransactions(*TransactionFilter, RentautomationService_GetTransactionsServer) error
}

func RegisterRentautomationServiceServer(s *grpc.Server, srv RentautomationServiceServer) {
	s.RegisterService(&_RentautomationService_serviceDesc, srv)
}

func _RentautomationService_GetExamples_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ExampleFilter)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RentautomationServiceServer).GetExamples(m, &rentautomationServiceGetExamplesServer{stream})
}

type RentautomationService_GetExamplesServer interface {
	Send(*ExampleRequest) error
	grpc.ServerStream
}

type rentautomationServiceGetExamplesServer struct {
	grpc.ServerStream
}

func (x *rentautomationServiceGetExamplesServer) Send(m *ExampleRequest) error {
	return x.ServerStream.SendMsg(m)
}

func _RentautomationService_CreateExample_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExampleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RentautomationServiceServer).CreateExample(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RentautomationService/CreateExample",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RentautomationServiceServer).CreateExample(ctx, req.(*ExampleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RentautomationService_CreateAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RentautomationServiceServer).CreateAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RentautomationService/CreateAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RentautomationServiceServer).CreateAccount(ctx, req.(*AccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RentautomationService_GetAccounts_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(AccountFilter)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RentautomationServiceServer).GetAccounts(m, &rentautomationServiceGetAccountsServer{stream})
}

type RentautomationService_GetAccountsServer interface {
	Send(*AccountRequest) error
	grpc.ServerStream
}

type rentautomationServiceGetAccountsServer struct {
	grpc.ServerStream
}

func (x *rentautomationServiceGetAccountsServer) Send(m *AccountRequest) error {
	return x.ServerStream.SendMsg(m)
}

func _RentautomationService_CreateCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RentautomationServiceServer).CreateCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RentautomationService/CreateCategory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RentautomationServiceServer).CreateCategory(ctx, req.(*CategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RentautomationService_GetCategories_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CategoryFilter)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RentautomationServiceServer).GetCategories(m, &rentautomationServiceGetCategoriesServer{stream})
}

type RentautomationService_GetCategoriesServer interface {
	Send(*CategoryRequest) error
	grpc.ServerStream
}

type rentautomationServiceGetCategoriesServer struct {
	grpc.ServerStream
}

func (x *rentautomationServiceGetCategoriesServer) Send(m *CategoryRequest) error {
	return x.ServerStream.SendMsg(m)
}

func _RentautomationService_CreateCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RentautomationServiceServer).CreateCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RentautomationService/CreateCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RentautomationServiceServer).CreateCustomer(ctx, req.(*CustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RentautomationService_GetCustomers_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CustomerFilter)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RentautomationServiceServer).GetCustomers(m, &rentautomationServiceGetCustomersServer{stream})
}

type RentautomationService_GetCustomersServer interface {
	Send(*CustomerRequest) error
	grpc.ServerStream
}

type rentautomationServiceGetCustomersServer struct {
	grpc.ServerStream
}

func (x *rentautomationServiceGetCustomersServer) Send(m *CustomerRequest) error {
	return x.ServerStream.SendMsg(m)
}

func _RentautomationService_CreateOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RentautomationServiceServer).CreateOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RentautomationService/CreateOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RentautomationServiceServer).CreateOrder(ctx, req.(*OrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RentautomationService_GetOrders_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(OrderFilter)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RentautomationServiceServer).GetOrders(m, &rentautomationServiceGetOrdersServer{stream})
}

type RentautomationService_GetOrdersServer interface {
	Send(*OrderRequest) error
	grpc.ServerStream
}

type rentautomationServiceGetOrdersServer struct {
	grpc.ServerStream
}

func (x *rentautomationServiceGetOrdersServer) Send(m *OrderRequest) error {
	return x.ServerStream.SendMsg(m)
}

func _RentautomationService_CreateOrderDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrderDetailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RentautomationServiceServer).CreateOrderDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RentautomationService/CreateOrderDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RentautomationServiceServer).CreateOrderDetail(ctx, req.(*OrderDetailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RentautomationService_GetOrderDetails_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(OrderDetailFilter)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RentautomationServiceServer).GetOrderDetails(m, &rentautomationServiceGetOrderDetailsServer{stream})
}

type RentautomationService_GetOrderDetailsServer interface {
	Send(*OrderDetailRequest) error
	grpc.ServerStream
}

type rentautomationServiceGetOrderDetailsServer struct {
	grpc.ServerStream
}

func (x *rentautomationServiceGetOrderDetailsServer) Send(m *OrderDetailRequest) error {
	return x.ServerStream.SendMsg(m)
}

func _RentautomationService_CreatePayment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PaymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RentautomationServiceServer).CreatePayment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RentautomationService/CreatePayment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RentautomationServiceServer).CreatePayment(ctx, req.(*PaymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RentautomationService_GetPayments_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PaymentFilter)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RentautomationServiceServer).GetPayments(m, &rentautomationServiceGetPaymentsServer{stream})
}

type RentautomationService_GetPaymentsServer interface {
	Send(*PaymentRequest) error
	grpc.ServerStream
}

type rentautomationServiceGetPaymentsServer struct {
	grpc.ServerStream
}

func (x *rentautomationServiceGetPaymentsServer) Send(m *PaymentRequest) error {
	return x.ServerStream.SendMsg(m)
}

func _RentautomationService_CreateProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RentautomationServiceServer).CreateProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RentautomationService/CreateProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RentautomationServiceServer).CreateProduct(ctx, req.(*ProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RentautomationService_GetProducts_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ProductFilter)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RentautomationServiceServer).GetProducts(m, &rentautomationServiceGetProductsServer{stream})
}

type RentautomationService_GetProductsServer interface {
	Send(*ProductRequest) error
	grpc.ServerStream
}

type rentautomationServiceGetProductsServer struct {
	grpc.ServerStream
}

func (x *rentautomationServiceGetProductsServer) Send(m *ProductRequest) error {
	return x.ServerStream.SendMsg(m)
}

func _RentautomationService_CreateStaff_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StaffRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RentautomationServiceServer).CreateStaff(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RentautomationService/CreateStaff",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RentautomationServiceServer).CreateStaff(ctx, req.(*StaffRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RentautomationService_GetStaff_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StaffFilter)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RentautomationServiceServer).GetStaff(m, &rentautomationServiceGetStaffServer{stream})
}

type RentautomationService_GetStaffServer interface {
	Send(*StaffRequest) error
	grpc.ServerStream
}

type rentautomationServiceGetStaffServer struct {
	grpc.ServerStream
}

func (x *rentautomationServiceGetStaffServer) Send(m *StaffRequest) error {
	return x.ServerStream.SendMsg(m)
}

func _RentautomationService_CreateTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RentautomationServiceServer).CreateTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.RentautomationService/CreateTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RentautomationServiceServer).CreateTransaction(ctx, req.(*TransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RentautomationService_GetTransactions_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(TransactionFilter)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RentautomationServiceServer).GetTransactions(m, &rentautomationServiceGetTransactionsServer{stream})
}

type RentautomationService_GetTransactionsServer interface {
	Send(*TransactionRequest) error
	grpc.ServerStream
}

type rentautomationServiceGetTransactionsServer struct {
	grpc.ServerStream
}

func (x *rentautomationServiceGetTransactionsServer) Send(m *TransactionRequest) error {
	return x.ServerStream.SendMsg(m)
}

var _RentautomationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.RentautomationService",
	HandlerType: (*RentautomationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateExample",
			Handler:    _RentautomationService_CreateExample_Handler,
		},
		{
			MethodName: "CreateAccount",
			Handler:    _RentautomationService_CreateAccount_Handler,
		},
		{
			MethodName: "CreateCategory",
			Handler:    _RentautomationService_CreateCategory_Handler,
		},
		{
			MethodName: "CreateCustomer",
			Handler:    _RentautomationService_CreateCustomer_Handler,
		},
		{
			MethodName: "CreateOrder",
			Handler:    _RentautomationService_CreateOrder_Handler,
		},
		{
			MethodName: "CreateOrderDetail",
			Handler:    _RentautomationService_CreateOrderDetail_Handler,
		},
		{
			MethodName: "CreatePayment",
			Handler:    _RentautomationService_CreatePayment_Handler,
		},
		{
			MethodName: "CreateProduct",
			Handler:    _RentautomationService_CreateProduct_Handler,
		},
		{
			MethodName: "CreateStaff",
			Handler:    _RentautomationService_CreateStaff_Handler,
		},
		{
			MethodName: "CreateTransaction",
			Handler:    _RentautomationService_CreateTransaction_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetExamples",
			Handler:       _RentautomationService_GetExamples_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetAccounts",
			Handler:       _RentautomationService_GetAccounts_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetCategories",
			Handler:       _RentautomationService_GetCategories_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetCustomers",
			Handler:       _RentautomationService_GetCustomers_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetOrders",
			Handler:       _RentautomationService_GetOrders_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetOrderDetails",
			Handler:       _RentautomationService_GetOrderDetails_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetPayments",
			Handler:       _RentautomationService_GetPayments_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetProducts",
			Handler:       _RentautomationService_GetProducts_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetStaff",
			Handler:       _RentautomationService_GetStaff_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetTransactions",
			Handler:       _RentautomationService_GetTransactions_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "customer.proto",
}

func init() { proto1.RegisterFile("customer.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1532 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x58, 0xd1, 0x6e, 0x1b, 0x45,
	0x17, 0xf6, 0xda, 0x71, 0x62, 0x1f, 0xc7, 0x76, 0x33, 0x7f, 0x5b, 0xed, 0xbf, 0x2a, 0x28, 0x1a,
	0xa1, 0xca, 0xa0, 0x2a, 0x0a, 0x45, 0xa2, 0x40, 0x25, 0x20, 0x4d, 0xda, 0x28, 0x54, 0x0d, 0x61,
	0xd3, 0x8a, 0xeb, 0xcd, 0xee, 0x34, 0x19, 0xd5, 0xde, 0x75, 0x77, 0xc7, 0x05, 0xf3, 0x04, 0x48,
	0xdc, 0xf2, 0x08, 0xdc, 0xc1, 0x03, 0xf0, 0x04, 0xbc, 0x03, 0x97, 0xdc, 0xf1, 0x00, 0x3c, 0x00,
	0x9a, 0x33, 0xb3, 0x3b, 0x33, 0xbb, 0x76, 0xb8, 0xe8, 0x55, 0x7c, 0xbe, 0x33, 0x3b, 0xf3, 0x9d,
	0xef, 0x9c, 0x39, 0x67, 0x37, 0x30, 0x8a, 0x17, 0x85, 0xc8, 0x66, 0x2c, 0xdf, 0x9b, 0xe7, 0x99,
	0xc8, 0x48, 0x17, 0xff, 0xd0, 0x5f, 0xdb, 0x30, 0x7a, 0xfc, 0x7d, 0x34, 0x9b, 0x4f, 0x59, 0xc8,
	0x5e, 0x2f, 0x58, 0x21, 0xc8, 0x08, 0xda, 0x3c, 0xf1, 0xbd, 0x5d, 0x6f, 0xb2, 0x11, 0xb6, 0x79,
	0x42, 0x08, 0x6c, 0xa4, 0xd1, 0x8c, 0xf9, 0xed, 0x5d, 0x6f, 0xd2, 0x0f, 0xf1, 0x37, 0xb9, 0x09,
	0x5d, 0x36, 0x8b, 0xf8, 0xd4, 0xef, 0x20, 0xa8, 0x0c, 0x89, 0xce, 0xaf, 0xb2, 0x94, 0xf9, 0x1b,
	0x0a, 0x45, 0x83, 0x3c, 0x84, 0x7e, 0x94, 0x24, 0x39, 0x2b, 0x0a, 0x56, 0xf8, 0xdd, 0xdd, 0xce,
	0x64, 0x70, 0xff, 0x1d, 0x45, 0x62, 0xcf, 0x3d, 0x79, 0xef, 0x40, 0x2d, 0x0b, 0xcd, 0xfa, 0xe0,
	0x27, 0x0f, 0xb6, 0x34, 0x4c, 0x6e, 0xc3, 0x66, 0x21, 0x72, 0xc6, 0x04, 0x92, 0xeb, 0x87, 0xda,
	0x92, 0x04, 0x63, 0x2e, 0x96, 0x25, 0x41, 0xf9, 0x5b, 0x52, 0x29, 0x44, 0x24, 0x58, 0x49, 0x10,
	0x0d, 0x72, 0x03, 0x3a, 0x3f, 0xf0, 0xb9, 0xa6, 0x27, 0x7f, 0x92, 0x7b, 0xb0, 0xc3, 0x8b, 0xf3,
	0x2b, 0x3e, 0x9f, 0xf3, 0xf4, 0x52, 0x1f, 0xe4, 0x77, 0x77, 0xbd, 0x49, 0x2f, 0x6c, 0x3a, 0xe8,
	0x43, 0x18, 0x57, 0x94, 0x8b, 0x79, 0x96, 0x16, 0xac, 0xa1, 0x96, 0x0f, 0x5b, 0xc5, 0x22, 0x8e,
	0xe5, 0x36, 0x6d, 0xdc, 0xa6, 0x34, 0xe9, 0xfb, 0x30, 0xd4, 0x0f, 0x3f, 0xe1, 0x53, 0xc1, 0x72,
	0xb9, 0xf4, 0x15, 0x5b, 0x7e, 0x97, 0xe5, 0x89, 0x0e, 0xa8, 0x34, 0xe9, 0xcf, 0x6d, 0xd8, 0x3e,
	0x17, 0xd1, 0xcb, 0x97, 0x65, 0x4e, 0xe4, 0xae, 0xd2, 0x3e, 0x29, 0x8f, 0x2a, 0x4d, 0x29, 0x4a,
	0x9e, 0x4d, 0xd9, 0x49, 0x82, 0xc7, 0x6d, 0x84, 0xda, 0x22, 0x77, 0x61, 0xa4, 0x96, 0xcc, 0xa2,
	0x4b, 0x76, 0x16, 0x89, 0x2b, 0xad, 0x44, 0x0d, 0x25, 0x77, 0xa0, 0xff, 0x92, 0xe7, 0x85, 0x38,
	0x95, 0x29, 0x56, 0xc2, 0x18, 0x80, 0xbc, 0x0b, 0x50, 0xb0, 0x38, 0x4b, 0x13, 0x74, 0x77, 0xd1,
	0x6d, 0x21, 0xa6, 0x0e, 0x36, 0xed, 0x3a, 0x08, 0xa0, 0x37, 0x8f, 0x8a, 0x02, 0x23, 0xdb, 0x42,
	0x47, 0x65, 0x93, 0x5d, 0x18, 0x60, 0x59, 0x9c, 0x2e, 0x66, 0x17, 0x2c, 0xf7, 0x7b, 0xe8, 0xb6,
	0x21, 0x19, 0xab, 0xce, 0xbf, 0xdf, 0x57, 0xb2, 0x68, 0x93, 0x7e, 0x08, 0x03, 0x54, 0x45, 0xeb,
	0x47, 0x61, 0x1b, 0x83, 0x79, 0xea, 0x88, 0xe8, 0x60, 0xf4, 0x00, 0x06, 0x61, 0x66, 0x6a, 0xdb,
	0xa8, 0xe5, 0x39, 0x6a, 0x05, 0xd0, 0x93, 0xbf, 0x4e, 0x4d, 0x9d, 0x57, 0x36, 0xfd, 0xa7, 0x0d,
	0xa3, 0xb3, 0x3c, 0x4b, 0x16, 0xb1, 0x28, 0xb7, 0xb9, 0x03, 0xfd, 0xb9, 0x42, 0xaa, 0x9d, 0x0c,
	0x40, 0x3e, 0x80, 0x1b, 0xa5, 0x51, 0x89, 0xaf, 0x36, 0x6d, 0xe0, 0x28, 0x87, 0xc2, 0xf0, 0xec,
	0x8e, 0x96, 0xc3, 0x40, 0x98, 0x82, 0xc5, 0x7c, 0x3e, 0xe5, 0x2c, 0x3f, 0x49, 0x30, 0x43, 0x1b,
	0xa1, 0x85, 0x48, 0x7f, 0x1c, 0x09, 0x76, 0x99, 0xe5, 0xcb, 0x93, 0x04, 0x53, 0xb4, 0x11, 0x5a,
	0x88, 0x94, 0xf3, 0x22, 0xca, 0xe3, 0x2c, 0x61, 0x3a, 0x49, 0xa5, 0x49, 0x26, 0x30, 0x7e, 0xbd,
	0x88, 0x52, 0xc1, 0xc5, 0xf2, 0x8c, 0xe5, 0x2f, 0x52, 0x2e, 0x74, 0xb6, 0xea, 0x30, 0x79, 0x0f,
	0x86, 0x45, 0x34, 0x65, 0xf2, 0xf7, 0x59, 0xce, 0x63, 0x86, 0x69, 0xf3, 0x42, 0x17, 0x94, 0xfb,
	0xf1, 0x34, 0xce, 0x66, 0xd6, 0xba, 0x3e, 0xae, 0xab, 0xc3, 0x32, 0x73, 0x8b, 0x94, 0x8b, 0xe2,
	0x24, 0x3d, 0x17, 0x59, 0xfc, 0xca, 0x07, 0x5c, 0xe6, 0x60, 0xf4, 0x01, 0x0c, 0xb5, 0xea, 0x3a,
	0xdd, 0x77, 0x61, 0xa4, 0x75, 0x71, 0x13, 0x5e, 0x43, 0xe9, 0x0b, 0x18, 0x1f, 0xea, 0xf0, 0xcb,
	0x7c, 0xb9, 0x1a, 0x79, 0x0d, 0x8d, 0x28, 0x6c, 0x97, 0x96, 0x55, 0x02, 0x0e, 0x46, 0x3f, 0x83,
	0x51, 0xb9, 0xad, 0x26, 0x34, 0x81, 0x71, 0xb9, 0xc2, 0x65, 0x54, 0x87, 0xe9, 0x9f, 0x1e, 0x8c,
	0x0f, 0x75, 0xff, 0xb5, 0x39, 0x69, 0xc8, 0xe2, 0x54, 0x21, 0xb2, 0x33, 0x55, 0x56, 0xad, 0x8c,
	0x9a, 0x0e, 0xf7, 0x1a, 0x77, 0xae, 0xbf, 0xc6, 0x1b, 0x8d, 0x6b, 0x5c, 0xbb, 0x94, 0xdd, 0x6b,
	0x2f, 0xe5, 0xa6, 0x7b, 0x29, 0xa5, 0x2e, 0x9a, 0x8e, 0xa5, 0x8b, 0x46, 0xea, 0xba, 0xb8, 0x30,
	0xfd, 0xcb, 0x83, 0xf1, 0xb9, 0x2e, 0x65, 0x4b, 0x17, 0xab, 0xde, 0xbd, 0x46, 0xbd, 0xdf, 0x83,
	0x9d, 0xca, 0xaa, 0xeb, 0xd2, 0x70, 0xc8, 0xc8, 0xe2, 0x6c, 0x36, 0x8f, 0xd2, 0xa5, 0x7d, 0xbf,
	0x2c, 0x08, 0x73, 0x9f, 0xa5, 0x22, 0x8a, 0xc5, 0x93, 0xd4, 0xa8, 0xe3, 0x60, 0x6f, 0xab, 0x4f,
	0x19, 0xa2, 0xd1, 0xa7, 0x24, 0x5a, 0xd3, 0xa7, 0x06, 0xd3, 0x1f, 0x3d, 0x18, 0x1d, 0xc4, 0x71,
	0xb6, 0x48, 0xed, 0xd6, 0x13, 0x29, 0xc4, 0xb4, 0x9e, 0x0a, 0xa8, 0x15, 0x55, 0xbb, 0x51, 0x54,
	0xae, 0xb8, 0x9d, 0x86, 0xb8, 0xd8, 0x2c, 0xa6, 0x51, 0x1a, 0x2b, 0x1d, 0xbc, 0xb0, 0x34, 0xe5,
	0x75, 0xd4, 0x4c, 0xcc, 0x75, 0xd4, 0xe7, 0xd6, 0xae, 0xa3, 0x8b, 0xd2, 0xdf, 0x3b, 0xb0, 0xfd,
	0x75, 0x9e, 0x98, 0x04, 0xfb, 0xb0, 0x95, 0x49, 0xdb, 0xcc, 0x32, 0x6d, 0xca, 0x36, 0x83, 0x3f,
	0x8f, 0xb2, 0x78, 0x31, 0x63, 0xa9, 0xc0, 0x00, 0x86, 0xa1, 0x0b, 0xca, 0x02, 0x98, 0x65, 0x29,
	0x5b, 0x3e, 0xcb, 0xde, 0x30, 0x09, 0x3c, 0x5f, 0xce, 0x55, 0x62, 0x87, 0x61, 0xd3, 0x21, 0xf5,
	0xba, 0xe0, 0xd3, 0x29, 0x4f, 0x2f, 0x4f, 0xb3, 0x72, 0xbe, 0x55, 0x80, 0x3d, 0x57, 0xbb, 0xee,
	0x5c, 0x75, 0x95, 0xdc, 0xfc, 0x0f, 0x25, 0xb7, 0x1a, 0x4a, 0xde, 0x81, 0xbe, 0xa2, 0x2d, 0x5f,
	0x42, 0x7a, 0x2a, 0x4f, 0x15, 0x80, 0x03, 0x24, 0x5a, 0x4a, 0x92, 0x27, 0x09, 0x36, 0x49, 0x39,
	0x40, 0x4a, 0x40, 0x4e, 0x23, 0x96, 0xe7, 0x59, 0xfe, 0xac, 0xb8, 0xc4, 0xd6, 0xd8, 0x0f, 0x2b,
	0x5b, 0x32, 0x8e, 0xb3, 0x19, 0xaa, 0x33, 0x50, 0x85, 0xa6, 0x4d, 0xb9, 0x27, 0x2f, 0x8e, 0xd8,
	0x94, 0x09, 0x96, 0xf8, 0xdb, 0xa8, 0x87, 0x01, 0xe4, 0xe4, 0xe3, 0xc5, 0x59, 0xc4, 0x13, 0x7f,
	0x88, 0x2e, 0x6d, 0xc9, 0xb3, 0x78, 0xf1, 0x38, 0xe1, 0xf2, 0xa1, 0x11, 0x7a, 0x2a, 0x5b, 0xce,
	0x5b, 0xcc, 0x9c, 0x99, 0xb7, 0x18, 0x41, 0x6d, 0xde, 0xda, 0x18, 0xfd, 0xcd, 0x83, 0xd1, 0x99,
	0x0a, 0xc4, 0x1e, 0x96, 0x55, 0xac, 0x5e, 0x3d, 0xd6, 0x09, 0x8c, 0x45, 0x26, 0xa2, 0x29, 0x1e,
	0xa4, 0x86, 0x46, 0x5b, 0x0d, 0x8d, 0x1a, 0x2c, 0x99, 0x26, 0xbc, 0xc0, 0xda, 0xc2, 0x74, 0x7b,
	0x61, 0x65, 0x93, 0x8f, 0xe1, 0x36, 0x2e, 0xc7, 0x95, 0xdf, 0x72, 0x71, 0x75, 0x54, 0xae, 0x54,
	0x65, 0xbc, 0xc6, 0x8b, 0x43, 0x46, 0x51, 0xb1, 0x86, 0x8c, 0x02, 0xea, 0x43, 0xc6, 0x41, 0xe9,
	0xdf, 0x1e, 0x10, 0xe4, 0x76, 0xc4, 0x44, 0xc4, 0xa7, 0x65, 0xac, 0x55, 0x05, 0x23, 0x5a, 0xc5,
	0xeb, 0x82, 0xf6, 0x0d, 0x68, 0xbb, 0x37, 0xc0, 0x79, 0xb1, 0xe8, 0xd4, 0x5f, 0x2c, 0xae, 0xaf,
	0x65, 0xf9, 0xf6, 0x8d, 0xfa, 0x75, 0x31, 0x64, 0x65, 0x54, 0x8c, 0xbe, 0xd1, 0x23, 0x1d, 0x4b,
	0xd9, 0x0b, 0x5d, 0xd0, 0xd1, 0x56, 0xd6, 0x72, 0xd7, 0x68, 0x4b, 0x0f, 0x61, 0xc7, 0x8a, 0x54,
	0xeb, 0xb4, 0x07, 0xc4, 0x8a, 0xc9, 0xd5, 0x6a, 0x85, 0x87, 0xfe, 0xd2, 0x06, 0xf2, 0x3c, 0x8f,
	0xd2, 0x22, 0x8a, 0x05, 0xcf, 0x52, 0x4b, 0x2f, 0x61, 0x50, 0xa3, 0x97, 0x03, 0x62, 0x8d, 0x18,
	0x00, 0x6f, 0x94, 0xd2, 0xad, 0x0e, 0xd7, 0x56, 0x5a, 0x9d, 0xa1, 0x0e, 0xcb, 0x96, 0x8e, 0xcd,
	0xe2, 0x60, 0x66, 0x95, 0x89, 0x0d, 0xd9, 0x59, 0xea, 0xba, 0x59, 0x7a, 0xdb, 0xde, 0x60, 0x75,
	0x9d, 0x9e, 0xd3, 0x75, 0xa4, 0xd6, 0x96, 0x4a, 0x46, 0x6b, 0x8b, 0x7d, 0x4d, 0xeb, 0xa6, 0xe7,
	0xfe, 0x1f, 0x00, 0xb7, 0x42, 0x96, 0x8a, 0x68, 0x21, 0xb2, 0x59, 0x24, 0x3d, 0xe7, 0x2c, 0x7f,
	0x23, 0x8b, 0xe1, 0x73, 0x18, 0x1c, 0x33, 0xa1, 0xbf, 0x42, 0x0a, 0x72, 0xd3, 0xfd, 0x0c, 0x53,
	0xc7, 0x05, 0xb7, 0x56, 0x7e, 0x9c, 0xd1, 0xd6, 0xbe, 0x47, 0xbe, 0x84, 0xe1, 0x61, 0xce, 0x22,
	0xc1, 0xb4, 0x8f, 0xac, 0x5e, 0x1b, 0xdc, 0xae, 0xc3, 0xea, 0x63, 0x89, 0xb6, 0xc8, 0x17, 0xe5,
	0x0e, 0x7a, 0x98, 0x54, 0x3b, 0xb8, 0x63, 0x2e, 0x58, 0x0d, 0xd3, 0x96, 0x0e, 0x41, 0xc3, 0x26,
	0x04, 0x67, 0x36, 0xad, 0x7d, 0x7a, 0xdf, 0x23, 0x8f, 0x60, 0xa4, 0x08, 0x94, 0x2f, 0x73, 0xa4,
	0x24, 0x5b, 0x7b, 0x69, 0x0c, 0xd6, 0xe0, 0xb4, 0x45, 0x1e, 0xc1, 0xf0, 0x98, 0x09, 0x8d, 0x73,
	0x56, 0x54, 0x41, 0xb8, 0x2f, 0x88, 0xeb, 0x77, 0x70, 0x78, 0xe8, 0xba, 0x31, 0x3c, 0xdc, 0x17,
	0xc5, 0x60, 0x0d, 0x4e, 0x5b, 0xe4, 0x00, 0xb6, 0x25, 0x0f, 0x8d, 0x5b, 0x34, 0x9c, 0xf7, 0xb1,
	0xf5, 0x1b, 0xec, 0x7b, 0xe4, 0x53, 0x18, 0x28, 0x1a, 0x78, 0xc5, 0xc9, 0xff, 0xf4, 0x52, 0x7b,
	0x60, 0x07, 0xab, 0x40, 0xda, 0x22, 0x9f, 0x40, 0xff, 0x98, 0x09, 0x04, 0x0b, 0x42, 0xec, 0x35,
	0xfa, 0xdc, 0xd5, 0xcf, 0xed, 0x7b, 0xe4, 0x29, 0xec, 0x58, 0x87, 0xaa, 0x46, 0x41, 0xfe, 0x6f,
	0xaf, 0x76, 0xba, 0x6a, 0xb0, 0xde, 0x45, 0x5b, 0xe4, 0x2b, 0x18, 0x97, 0x34, 0x94, 0xab, 0x20,
	0x7e, 0x73, 0xbd, 0xa6, 0x74, 0xdd, 0x4e, 0xfb, 0x9e, 0xa9, 0x4e, 0x3d, 0x14, 0x2a, 0x45, 0xdd,
	0x91, 0x16, 0xac, 0x86, 0xab, 0xea, 0xd4, 0xb0, 0xa9, 0x4e, 0x67, 0xc6, 0xac, 0x7d, 0xda, 0x21,
	0xa0, 0x9a, 0xbe, 0x21, 0xe0, 0x7c, 0x80, 0x06, 0xab, 0x61, 0x43, 0x40, 0xc1, 0x16, 0x01, 0xfb,
	0x4b, 0x6a, 0xed, 0xd3, 0x76, 0x3d, 0xe0, 0x87, 0x76, 0x55, 0x0f, 0xf6, 0x3f, 0x23, 0x82, 0x55,
	0x20, 0x6d, 0x91, 0x07, 0xd0, 0x3b, 0x66, 0x42, 0x3d, 0x47, 0xec, 0x25, 0xb5, 0x72, 0x70, 0x1f,
	0xb3, 0xcb, 0xc1, 0x6a, 0x7d, 0x55, 0x39, 0x34, 0x87, 0x46, 0xb0, 0xde, 0x55, 0x95, 0x83, 0xe5,
	0x32, 0xe5, 0xd0, 0xe8, 0xac, 0xd7, 0xee, 0xb4, 0xef, 0x5d, 0x6c, 0xa2, 0xf7, 0xa3, 0x7f, 0x03,
	0x00, 0x00, 0xff, 0xff, 0xce, 0x9b, 0x15, 0x6d, 0x3c, 0x13, 0x00, 0x00,
}
