syntax = "proto3";
package proto;

// The Customer service definition.
service RentautomationService {

    rpc GetExamples(ExampleFilter) returns (stream ExampleRequest) {}
    rpc CreateExample(ExampleRequest) returns (ExampleResponse) {}

    rpc CreateAccount (AccountRequest) returns (AccountRequest) {}
    rpc GetAccounts(AccountFilter) returns (stream AccountRequest) {}

    rpc CreateCategory (CategoryRequest) returns (CategoryRequest) {}
    rpc UpdateCategory (CategoryRequest) returns (CategoryRequest) {}
    rpc GetCategories(CategoryFilter) returns (stream CategoryRequest) {}

    rpc CreateCustomer (CustomerRequest) returns (CustomerRequest) {}
    rpc GetCustomers(CustomerFilter) returns (stream CustomerRequest) {}

    rpc CreateOrder (OrderRequest) returns (OrderRequest) {}
    rpc GetOrders(OrderFilter) returns (stream OrderRequest) {}

    rpc CreateOrderDetail (OrderDetailRequest) returns (OrderDetailRequest) {}
    rpc GetOrderDetails(OrderDetailFilter) returns (stream OrderDetailRequest) {}

    rpc CreatePayment (PaymentRequest) returns (PaymentRequest) {}
    rpc GetPayments(PaymentFilter) returns (stream PaymentRequest) {}

    rpc CreateProduct (ProductRequest) returns (ProductRequest) {}
    rpc GetProducts(ProductFilter) returns (stream ProductRequest) {}

    rpc CreateStaff (StaffRequest) returns (StaffRequest) {}
    rpc GetStaff(StaffFilter) returns (stream StaffRequest) {}

    rpc CreateTransaction (TransactionRequest) returns (TransactionRequest) {}
    rpc GetTransactions(TransactionFilter) returns (stream TransactionRequest) {}


    // ------------------ New methods ------------------ //
    rpc CreateProductWith (CreateProductRequest) returns (CreateProductRequest) {}
    rpc UpdateProductWith (CreateProductRequest) returns (CreateProductRequest) {}
    rpc AllProductsWith (ProductFilter) returns (stream CreateProductRequest) {}

    rpc CreateCustomerWith (CreateCustomerRequest) returns (CreateCustomerRequest) {}
    rpc UpdateCustomerWith (CustomerRequest) returns (CustomerRequest) {}
    rpc UpdateCustomerBalanceWith (CreateCustomerRequest) returns (CreateCustomerRequest) {}
    rpc AllCustomersWith (CustomerFilter) returns (stream CreateCustomerRequest) {}

    rpc CreateSupplierWith (CreateSupplierRequest) returns (CreateSupplierRequest) {}
    rpc UpdateSupplierWith (SupplierRequest) returns (SupplierRequest) {}
    rpc UpdateSupplierBalanceWith (CreateSupplierRequest) returns (CreateSupplierRequest) {}
    rpc AllSuppliersWith (SupplierFilter) returns (stream CreateSupplierRequest) {}

    rpc CreateStaffWith (StaffRequest) returns (StaffRequest) {}
    rpc UpdateStaffWith (StaffRequest) returns (StaffRequest) {}
    rpc AllStaffWith (StaffFilter) returns (stream StaffRequest) {}
    rpc SignInWith (SignInRequest) returns (StaffRequest) {}

    rpc CreateOrderWith (CreateOrderRequest) returns (CreateOrderRequest) {}

    rpc UpdateStream(stream StickyNoteRequest) returns (stream StickyNoteResponse) {}
}

// Request message for creating a new customer
message StickyNoteRequest {
    string message = 1;
    bytes requestImage = 2;
}

message StickyNoteResponse {
    string message = 1;
    bytes responseImage = 2;
}

message ExampleRequest {
    uint64 id = 1;  // Unique ID number for a Customer.
    string name = 2;
    string email = 3;
    string phone= 4;

    message Address {
        string street = 1;
        string city = 2;
        string state = 3;
        string zip = 4;
        bool isShippingAddress = 5;
    }

    repeated Address addresses = 5;
}

message ExampleResponse {
    uint64 id = 1;
    bool success = 2;
}

message ExampleFilter {
    string keyword = 1;
}

message CreateProductRequest {
    ProductRequest product = 1;
    OrderDetailRequest orderDetail = 2;
}

message CreateCustomerRequest {
    CustomerRequest customer = 1;
    TransactionRequest transaction = 2;
    AccountRequest account = 3;
}

message CreateSupplierRequest {
    SupplierRequest supplier = 1;
    TransactionRequest transaction = 2;
    AccountRequest account = 3;
}

// static objects
message StaffRequest {
    uint64 staffId = 1;
    uint64 roleId = 2;
    string staffImagePath = 3;
    string firstName = 4;
    string secondName = 5;
    string email = 6;
    string password = 7;
    string phoneNumber = 8;
    string address = 9;
}

message StaffFilter {
    string staffKeyword = 1;
}

message RoleRequest {
    uint64 roleId = 1;
    string roleName = 2;
}

message ProductRequest {
    uint64 productId = 1;
    string productImagePath = 2;
    string productName = 3;
    uint64 supplierId = 4;
    uint64 categoryId = 5;
    string barcode = 6;
    string quantityPerUnit = 7;
    double saleUnitPrice = 8;
    double incomeUnitPrice = 9;
    double unitsInStock = 10;
}

message ProductFilter {
    string productKeyword = 1;
}

message CategoryRequest {
    uint64 categoryId = 1;
    string categoryName = 2;
}

message CategoryFilter {
    string categoryKeyword = 1;
}

message CustomerRequest {
    uint64 customerId = 1;
    string customerImagePath = 2;
    string firstName = 3;
    string secondName = 4;
    string phoneNumber = 5;
    string address = 6;
}

message CustomerFilter {
    string customerKeyword = 1;
}

message SupplierRequest {
    uint64 supplierId = 1;
    string supplierImagePath = 2;
    string companyName = 3;
    string contactFname = 4;
    string phoneNumber = 5;
    string address = 6;
}

message SupplierFilter {
    string supplierKeyword = 1;
}

message AccountRequest {
    uint64 accountId = 1;
    uint64 customerId = 2;
    uint64 supplierId = 3;
    double balance = 4;
}

message AccountFilter {
    string accountKeyword = 1;
}

// static objects
message OrderRequest {
    uint64 orderId = 1;
    uint32 orderDocument = 2;
    uint32 moneyMovementType = 3;
    string billingNo = 4;
    uint64 staffId = 5;
    uint64 customerId = 6;
    uint64 supplierId = 7;
    uint64 orderDate = 8;
    uint64 paymentId = 9;
    string errorMsg = 10;
    string comment = 11;

    uint32 isDeleted = 12;
    uint32 isPaid = 13;
    uint32 isEdited = 14;
}

message OrderFilter {
    string orderKeyword = 1;
}

message PaymentRequest {
    uint64 paymentId = 1;
    double totalOrderPrice = 2;
    double discount = 3;
    double totalPriceWithDiscount = 4;
}

message PaymentFilter {
    string paymentKeyword = 1;
}

message OrderDetailRequest {
    uint64 orderDetailId = 1;
    uint64 orderId = 2;
    uint64 orderDetailDate = 3;
    uint32 isLast = 4;
    uint64 productId = 5;
    string billingNo = 6;
    double price = 7;
    double orderQuantity = 8;
    int32 discount = 9;
}

message OrderDetailFilter {
    string orderDetailKeyword = 1;
}

message TransactionRequest {
    uint64 transactionId = 1;
    uint64 transactionDate = 2;
    uint32 isLastTransaction = 3;
    uint32 transactionType = 4;
    double moneyAmount = 5;
    uint64 orderId = 6;
    uint64 customerId = 7;
    uint64 supplierId = 8;
    uint64 staffId = 9;
}

message TransactionFilter {
    string transactionKeyword = 1;
}

message SignInRequest {
    string email = 1;
    string password = 2;
}

message CreateOrderRequest {
    OrderRequest order = 1;
    PaymentRequest payment = 2;
    TransactionRequest transaction = 3;
    AccountRequest account = 4;
    repeated OrderDetailRequest orderDetails = 5;
}