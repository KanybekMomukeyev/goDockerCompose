syntax = "proto3";
package proto;

// The Customer service definition.
service RentautomationService {
    // Get all Examples with filter - A server-to-client streaming RPC.
    rpc GetExamples(ExampleFilter) returns (stream ExampleRequest) {}
    // Create a new Example - A simple RPC
    rpc CreateExample (ExampleRequest) returns (ExampleResponse) {}

    rpc CreateStaff (StaffRequest) returns (StaffRequest) {}
    rpc GetStaff(StaffFilter) returns (stream StaffRequest) {}
}

// Request message for creating a new customer
message ExampleRequest {
    uint64 id = 1;  // Unique ID number for a Customer.
    string name = 2;
    string email = 3;
    string phone= 4;

    message Address {
        string street = 1;
        string city = 2;
        string state = 3;
        string zip = 4;
        bool isShippingAddress = 5;
    }

    repeated Address addresses = 5;
}

message ExampleResponse {
    uint64 id = 1;
    bool success = 2;
}

message ExampleFilter {
    string keyword = 1;
}

// static objects
message StaffRequest {
    uint64 staffId = 1;
    uint64 roleId = 2;
    string staffImagePath = 3;
    string firstName = 4;
    string secondName = 5;
    string email = 6;
    string password = 7;
    string phoneNumber = 8;
    string address = 9;
}

message StaffFilter {
    string staffKeyword = 1;
}

message RoleRequest {
    uint64 roleId = 1;
    string roleName = 2;
}

message ProductRequest {
    uint64 productId = 1;
    string productImagePath = 2;
    string productName = 3;
    uint64 supplierId = 4;
    uint64 categoryId = 5;
    string barcode = 6;
    string quantityPerUnit = 7;
    double saleUnitPrice = 8;
    double incomeUnitPrice = 9;
    double unitsInStock = 10;
}

message ProductFilter {
    string productKeyword = 1;
}

message CategoryRequest {
    uint64 categoryId = 1;
    string categoryName = 2;
}

message CategoryFilter {
    string categoryKeyword = 1;
}

message CustomerRequest {
    uint64 customerId = 1;
    string customerImagePath = 2;
    string firstName = 3;
    string secondName = 4;
    string phoneNumber = 5;
    string address = 6;
}

message CustomerFilter {
    string customerKeyword = 1;
}

message SupplierRequest {
    uint64 supplierId = 1;
    string supplierImagePath = 2;
    string companyName = 3;
    string contactFname = 4;
    string phoneNumber = 5;
    string address = 6;
}

message SupplierFilter {
    string supplierKeyword = 1;
}

message AccountRequest {
    uint64 accountId = 1;
    uint64 customerId = 2;
    uint64 supplierId = 3;
    double balance = 4;
}

message AccountFilter {
    string accountKeyword = 1;
}

// static objects
message OrderRequest {
    uint64 orderId = 1;
    uint32 orderDocument = 2;
    uint32 moneyMovementType = 3;
    string billingNo = 4;
    uint64 staffId = 5;
    uint64 customerId = 6;
    uint64 supplierId = 7;
    uint64 orderDate = 8;
    uint64 paymentId = 9;
    string errorMsg = 10;
    string comment = 11;

    bool isDeleted = 12;
    bool isPaid = 13;
    bool isEdited = 14;
}

message OrderFilter {
    string orderKeyword = 1;
}

message PaymentRequest {
    uint64 paymentId = 1;
    double totalOrderPrice = 2;
    double discount = 3;
    double totalPriceWithDiscount = 4;
}

message PaymentFilter {
    string paymentKeyword = 1;
}

message OrderDetailRequest {
    uint64 orderDetailId = 1;
    uint64 orderId = 2;
    uint64 productId = 3;
    string billingNo = 4;
    double price = 5;
    double orderQuantity = 6;
    int32 discount = 7;
}

message OrderDetailFilter {
    string orderDetailKeyword = 1;
}

message TransactionRequest {
    uint64 transactionId = 1;
    uint64 transactionDate = 2;
    uint32 transactionType = 3;
    double moneyAmount = 4;
    uint64 orderId = 5;
    uint64 customerId = 6;
    uint64 supplierId = 7;
    uint64 staffId = 8;
}

message TransactionFilter {
    string transactionKeyword = 1;
}